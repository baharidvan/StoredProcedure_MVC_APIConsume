// <auto-generated />
using System;
using HospitalWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HospitalWebApi.Entity.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dahiliye"
                        },
                        new
                        {
                            Id = 2,
                            Name = "KBB"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ortopedi"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cildiye"
                        });
                });

            modelBuilder.Entity("HospitalWebApi.Entity.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 32,
                            DepartmentId = 1,
                            FullName = "Ahmet Büyük"
                        },
                        new
                        {
                            Id = 2,
                            Age = 28,
                            DepartmentId = 2,
                            FullName = "Mehmet Sancak"
                        },
                        new
                        {
                            Id = 3,
                            Age = 36,
                            DepartmentId = 2,
                            FullName = "Semih Boyer"
                        },
                        new
                        {
                            Id = 4,
                            Age = 41,
                            DepartmentId = 3,
                            FullName = "Ayşe Yalın"
                        },
                        new
                        {
                            Id = 5,
                            Age = 35,
                            DepartmentId = 4,
                            FullName = "Betül Kırmızı"
                        },
                        new
                        {
                            Id = 6,
                            Age = 29,
                            DepartmentId = 2,
                            FullName = "Fatma Yeşil"
                        },
                        new
                        {
                            Id = 7,
                            Age = 51,
                            DepartmentId = 4,
                            FullName = "Mehmet Sarac"
                        });
                });

            modelBuilder.Entity("HospitalWebApi.Entity.DoctorDepartment", b =>
                {
                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DoctorDepartments");
                });

            modelBuilder.Entity("HospitalWebApi.Entity.Nurse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Nurses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 23,
                            DepartmentId = 2,
                            FullName = "Ayşe Sarı"
                        },
                        new
                        {
                            Id = 2,
                            Age = 43,
                            DepartmentId = 1,
                            FullName = "Zehra Kurt"
                        },
                        new
                        {
                            Id = 3,
                            Age = 31,
                            DepartmentId = 1,
                            FullName = "Emine Sancak"
                        },
                        new
                        {
                            Id = 4,
                            Age = 25,
                            DepartmentId = 4,
                            FullName = "Ali Mert"
                        },
                        new
                        {
                            Id = 5,
                            Age = 29,
                            DepartmentId = 4,
                            FullName = "Ece Berk"
                        },
                        new
                        {
                            Id = 6,
                            Age = 36,
                            DepartmentId = 3,
                            FullName = "Hatice Canoglu"
                        },
                        new
                        {
                            Id = 7,
                            Age = 45,
                            DepartmentId = 2,
                            FullName = "Ahmet Kiraz"
                        });
                });

            modelBuilder.Entity("HospitalWebApi.Entity.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NurseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("NurseId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 23,
                            DoctorId = 1,
                            FullName = "Hasan Akçay",
                            NurseId = 3
                        },
                        new
                        {
                            Id = 2,
                            Age = 30,
                            DoctorId = 1,
                            FullName = "Şeyma Kural",
                            NurseId = 2
                        },
                        new
                        {
                            Id = 3,
                            Age = 16,
                            DoctorId = 2,
                            FullName = "Şamil Kaya",
                            NurseId = 1
                        },
                        new
                        {
                            Id = 4,
                            Age = 20,
                            DoctorId = 3,
                            FullName = "Ali Osman Kara",
                            NurseId = 4
                        },
                        new
                        {
                            Id = 5,
                            Age = 30,
                            DoctorId = 4,
                            FullName = "Filiz Köseoğlu",
                            NurseId = 2
                        },
                        new
                        {
                            Id = 6,
                            Age = 52,
                            DoctorId = 7,
                            FullName = "Feyza Duru",
                            NurseId = 2
                        },
                        new
                        {
                            Id = 7,
                            Age = 56,
                            DoctorId = 5,
                            FullName = "Ahsen Kırmızı",
                            NurseId = 5
                        },
                        new
                        {
                            Id = 8,
                            Age = 45,
                            DoctorId = 6,
                            FullName = "Büşra Aktay",
                            NurseId = 6
                        },
                        new
                        {
                            Id = 9,
                            Age = 33,
                            DoctorId = 4,
                            FullName = "Kemal Dinçer",
                            NurseId = 5
                        },
                        new
                        {
                            Id = 10,
                            Age = 54,
                            DoctorId = 7,
                            FullName = "Fatma Yara",
                            NurseId = 3
                        },
                        new
                        {
                            Id = 11,
                            Age = 19,
                            DoctorId = 1,
                            FullName = "Mehmet Efe Can",
                            NurseId = 5
                        },
                        new
                        {
                            Id = 12,
                            Age = 34,
                            DoctorId = 2,
                            FullName = "Sümeyra Damla",
                            NurseId = 6
                        },
                        new
                        {
                            Id = 13,
                            Age = 38,
                            DoctorId = 5,
                            FullName = "Halil Merkez",
                            NurseId = 1
                        },
                        new
                        {
                            Id = 14,
                            Age = 14,
                            DoctorId = 3,
                            FullName = "Hasan Saran",
                            NurseId = 4
                        });
                });

            modelBuilder.Entity("HospitalWebApi.Entity.PatientList", b =>
                {
                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("PatientLists");
                });

            modelBuilder.Entity("HospitalWebApi.Entity.Doctor", b =>
                {
                    b.HasOne("HospitalWebApi.Entity.Department", "Department")
                        .WithMany("Doctors")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("HospitalWebApi.Entity.Nurse", b =>
                {
                    b.HasOne("HospitalWebApi.Entity.Department", "Department")
                        .WithMany("Nurses")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("HospitalWebApi.Entity.Patient", b =>
                {
                    b.HasOne("HospitalWebApi.Entity.Doctor", "Doctor")
                        .WithMany("Patients")
                        .HasForeignKey("DoctorId");

                    b.HasOne("HospitalWebApi.Entity.Nurse", "Nurse")
                        .WithMany("Patients")
                        .HasForeignKey("NurseId");

                    b.Navigation("Doctor");

                    b.Navigation("Nurse");
                });

            modelBuilder.Entity("HospitalWebApi.Entity.Department", b =>
                {
                    b.Navigation("Doctors");

                    b.Navigation("Nurses");
                });

            modelBuilder.Entity("HospitalWebApi.Entity.Doctor", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("HospitalWebApi.Entity.Nurse", b =>
                {
                    b.Navigation("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
